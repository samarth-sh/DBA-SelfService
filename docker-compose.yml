services:
  postgres:
    container_name: postgres
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: specialuser
      POSTGRES_PASSWORD: Amazing
      POSTGRES_DB: own_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - my-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U specialuser -d own_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  go-backend:
    container_name: go_backend
    build: ./go-backend
    ports:
      - "8080:8080"
    networks:
      - my-network
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: specialuser
      DB_PASSWORD: Amazing
      DB_NAME: own_db
    
  sveltekit-frontend:
    container_name: sveltekit_frontend
    build: ./sveltekit-frontend
    ports:
      - "5173:5173"
    networks:
      - my-network
    depends_on:
      - go-backend
    restart: always

networks:
  my-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
