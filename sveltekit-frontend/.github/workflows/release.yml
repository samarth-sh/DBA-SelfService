name: Release creation
on:
  push:
    branches:
      - main
      - hotfix-*
      - uat
      - cug
      - release
    paths-ignore:
      - '**.md'
      - '.gitignore'

concurrency:
  group: release-${{ github.repository }}
  cancel-in-progress: false

jobs:
  deploy:
    name: Build Artifact
    if: (github.actor != 'github-bot-angel')
    runs-on: aws-ec2
    strategy:
      matrix:
        stage: ['uat', 'cug', 'prod']
      fail-fast: false
    env:
      BUILD_ENV: ${{ matrix.stage }}
    steps:
      - name: Clean the workspace
        uses: docker://alpine:3
        with:
          args: /bin/sh -c "rm -rf /github/workspace/.* || rm -rf /github/workspace/*"

      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          repository: 'angel-one/build-ecs-action'
          ref: '2.8.0'
          token: ${{ secrets.SRE_GIT_READ_TOKEN }}
          path: ./.github/workflows
          clean: 'false'

      - name: Copy custom action
        shell: bash
        run: |
          cp ./.github/workflows/merge-flow/action.yml ./.github/workflows/

      - name: Run Custom NODE Build action
        uses: ./.github/workflows # Uses an action in the directory
        id: image
        with:
          MAJOR_VERSION: 0
          RUN_CODE_UNIT_TEST: 0 #Use flag 1 to enable and 0 to disable
          REGISTRY: ghcr.io
          # github.repository as <account>/<repo>
          DOCKER_BUILD_ARGS: 'BUILD_ENV=${{ env.BUILD_ENV }}'
          ECR_REPO_NAME: ${{ github.event.repository.name }}-${{ env.BUILD_ENV }}
          SERVICE_PORT: 8080
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXUS_REPO_NAME: ${{ github.event.repository.name }}-${{ env.BUILD_ENV }}
          SRE_NEXUS_USERNAME: ${{ secrets.SRE_NEXUS_USERNAME }}
          SRE_NEXUS_PASSWORD: ${{ secrets.SRE_NEXUS_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.SRE_ECR_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SRE_ECR_AWS_SECRET_ACCESS_KEY }}
          RELEASE_TOKEN: ${{ secrets.SRE_GIT_READ_TOKEN }} #Personal access token to create releases
          TAGGING_ENABLED: 'false'
          CONTAINER_SCAN: 'false'

      - run: |
          echo "ECR Image URI for CD ${{ steps.image.outputs.ecr_uri }} "
          echo "Nexus Image URI for CD ${{ steps.image.outputs.nexus_uri }} "
        shell: bash

    outputs:
      new_tag: ${{ steps.image.outputs.image_version }}

  tag_version:
    needs: deploy
    name: 'Create Github tag'
    if: (github.actor != 'github-bot-angel')
    runs-on: aws-ec2
    env:
      new_tag: ${{ needs.deploy.outputs.new_tag }}
    steps:
      - name: Checkout repository ${{ github.event.repository.name }}
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SRE_GITHUB_BOT_TOKEN }}
          fetch-depth: '0'

      - name: Update package json
        uses: addnab/docker-run-action@v3
        with:
          image: node:18.13.0
          options: -v ${{ github.workspace }}:/code
          run: |
            cd /code
            git config user.name "GitHub Actions"
            git config user.email "github-bot@angelbroking.com"
            npm --no-git-tag-version version ${{ env.new_tag }}  -m "update package.json"
            git add package.json
            git commit -m "update package.json"
            git push
            git tag ${{ env.new_tag }} && git push origin ${{ env.new_tag }}
            ls